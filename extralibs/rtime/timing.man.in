.TH timing 3x "3 Jul 1995" " "
.SH NAME
TM_Init, TM_Clear, TM_Start, TM_Stop, TM_Avg
\- time meassurement functions
.SH SYNOPSIS
.LP
.ti -2n
PARIX:
.br
.B px ancc
.B \-DPARIX \-I@prefix@/include
.RI "[ " "flag" " \|.\|.\|. ] " "file" " \|.\|.\|."
.B "\-L@prefix@/lib \-lrtime"
.RI "[ " "library" " \|.\|.\|. ]"
.LP
.ti -2n
Solaris:
.br
.B cc 
.B \-I@prefix@/include
.RI "[ " "flag" " \|.\|.\|. ] " "file" " \|.\|.\|."
.B "\-lposix4 \-L@prefix@/lib \-lrtime"
.RI "[ " "library" " \|.\|.\|. ]"
.LP
.ti -2n
AIX:
.br
.B xlc
.B \-I@prefix@/include
.RI "[ " "flag" " \|.\|.\|. ] " "file" " \|.\|.\|."
.B "\-L@prefix@/lib \-lrtime"
.RI "[ " "library" " \|.\|.\|. ]"
.LP
.ti -2n
OSF/1:
.br
.B cc 
.B \-I@prefix@/include
.RI "[ " "flag" " \|.\|.\|. ] " "file" " \|.\|.\|."
.B "\-lrt \-L@prefix@/lib \-lrtime"
.RI "[ " "library" " \|.\|.\|. ]"
.LP
.ti -2n
---
.br
.B
#include "timing.h"
.LP
.BI "void TM_Init(tTM_Info *" "timer" ");"
.LP
.BI "void TM_Clear(tTM_Info *" "timer" ");"
.LP
.BI "void TM_Start(tTM_Info *" "timer" ");"
.LP
.BI "void TM_Stop(tTM_Info *" "timer" ");"
.LP
.BI "void TM_Avg(tTM_Info *" "timer, " "timespec_t *" "avg" ");"
.LP
.BI "#define	TM_Tot(" "timer" ")	((" "timer" ")->total)"
.br
.BI "#define	TM_Nr(" "timer" ")	((" "timer" ")->nr)"
.br
.BI "#define	TM_Min(" "timer" ")	((" "timer" ")->min)"
.br
.BI "#define	TM_Max(" "timer" ")	((" "timer" ")->max)"
.br
.BI "#define	TM_Last(" "timer" ")	((" "timer" ")->last)"
.LP


.B typedef struct {
.br
.B	struct {		\f1/* internal data */\fP
.br
.B		timespec_t	start;	\f1/* start time */\fP
.br
.B		timespec_t	corr;	\f1/* time correction */\fP
.br
.B	} internal;
.br
.br
.B	timespec_t	total;	\f1/* totaltime */\fP
.br
.B	timespec_t	last;	\f1/* last interval */\fP
.br
.B	timespec_t	min;	\f1/* shortest interval */\fP
.br
.B	timespec_t	max;	\f1/* longest interval */\fP
.br
.B	unsigned long	nr;	\f1/* nr of intervals */\fP
.br
.B } tTM_Info;
.LP
.B
typedef struct timespec {
.br
.B	time_t	tv_sec;	\f1/* seconds */\fP
.br
.B	long	tv_nsec;	\f1/* and nanoseconds */\fP
.br
.B
} timespec_t;

.SH DESCRIPTION
.B TM_Init(\|)
initialize the 
.I timer. 
An estimation of the time it takes to make an measurement is
stored as a correction value in
.I timer
\-\>internal\-\>corr.
.I timer 
is cleared.
.LP
.B TM_Clear(\|)
clears 
.I timer. 
(Sets the measured time to 0.)
.LP
.B TM_Start(\|)
starts a measurement of a time interval using
.I timer. 
The start time is stored in
.I timer
\-\>internal\-\>corr.
.LP
.B TM_Stop(\|) 
stops a measurement of a time interval using
.I timer. 
The elapsed time in the
interval is adjusted with the correction value estimated in
.B TM_Init(\|)
and added to 
.I timer\-\>total. 
It also increments the number of intervals
.I timer\-\>nr
and remembers the shortest 
.I (timer\-\>min)
and the longest 
.I (timer\-\>max)
measured time interval.
.LP
.B TM_Avg(\|)
calculate the average of all measured time intervals since the last
call to
.B TM_Clear(\|)
and sets
.I avg
to this value.
.LP
.B TM_Tot(\|)
extracts the sum of all measured time intervals using
.I timer.
.LP
.B TM_Nr(\|)
extracts the number of measured time intervals using
.I timer.
.LP
.B TM_Min(\|)
extracts the shortest measured time interval using
.I timer.
.LP
.B TM_Max(\|)
extracts the longest measured time interval using
.I timer.
.LP
.B TM_Last(\|)
extracts the last measured time interval using
.I timer.
.SH "RETURN VALUES"
.B TM_Clear(\|), TM_Start(\|), TM_Stop(\|), TM_Init(\|), 
and 
.B TM_Avg(\|) 
does not return anything.
.SH "SEE ALSO"
.BR rtime(3x)
.SH NOTES
.B TM_Start(\|) 
and
.B TM_Stop(\|)
is 
.B not
thread-safe. There is no reason for that since a time measurement should
be kept inside one thread.
.SH AUTHOR
Niclas Andersson <nican@ida.liu.se>
.br 
Department of Computer and Information Science
.br 
Linkoping University, Sweden




